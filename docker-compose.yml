services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: fusionauth
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: fusionauth
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "fusionauth"]
      interval: 5s
      retries: 10
      start_period: 5s

  fusionauth:
    image: fusionauth/fusionauth-app:latest
    restart: unless-stopped
    ports:
      - "9011:9011"
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
      DATABASE_ROOT_USERNAME: fusionauth
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: fusionauth
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      FUSIONAUTH_APP_KICKSTART_FILE: /kickstart/kickstart.json
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - fusionauth-config:/usr/local/fusionauth/data
      - ./kickstart:/kickstart:ro

  caddy:
    image: caddy:2
    restart: unless-stopped
    profiles: ["prod"]           # run only on EC2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
    depends_on:
      fusionauth:
        condition: service_started

volumes:
  db-data:
  fusionauth-config:
  caddy-data: